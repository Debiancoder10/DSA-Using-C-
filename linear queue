// WAP for implementation of linear queue *
#include <iostream>
using namespace std;
int front=-1;
int rear=-1;
int maxsize = 5;
int queue[5];
void enqueue(int data)
{
    if(front==-1&&rear==-1)
    {
        front=rear=0;
        queue[rear]=data;
    }
    else if(rear==(maxsize-1))
    {
        cout<<"Queue is over flowed"<<endl;
    }
    else
    {
        rear++;
        queue[rear]=data;
    }
}
void dequeue()
{
    if(front==-1&&rear==-1)
    {
        cout<<"queue is empty"<<endl;
    }
    else if(front==rear)
    {
        front=rear=-1;
    }
    else
    {
       
        front++;
    }
    
}
void display()
{
    int i;
    for(i=front;i<=rear;i++)
    {
        cout<<" "<<queue[i]; 
    }
    
}
int main()
{
    enqueue(10);
    enqueue(20);
    display();
    dequeue();
    display();
    
    
}
